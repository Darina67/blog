-- phpMyAdmin SQL Dump
-- version 5.1.0
-- https://www.phpmyadmin.net/
--
-- Хост: 127.0.0.1:3306
-- Время создания: Апр 21 2022 г., 23:11
-- Версия сервера: 8.0.24
-- Версия PHP: 8.0.8

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- База данных: `diplom`
--

-- --------------------------------------------------------

--
-- Структура таблицы `comments`
--

CREATE TABLE `comments` (
  `id` int NOT NULL,
  `comment_id` int DEFAULT NULL,
  `body` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `data` date NOT NULL,
  `user_name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `user_avatar` varchar(500) COLLATE utf8mb4_unicode_ci NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Дамп данных таблицы `comments`
--

INSERT INTO `comments` (`id`, `comment_id`, `body`, `data`, `user_name`, `user_avatar`) VALUES
(9, 2, 'тудуц', '2022-04-18', 'Ева Герц', 'uploads/users/1649065257xMoSND43lLM.jpg'),
(11, 4, 'Нужно просто больше практиковаться над набором на клавиатуре!', '2022-04-20', 'Админ', 'uploads/users/164996764516479684650-02-05-14acf90ce40c166b956b4ca0e942be17759b6eb5ed64b0a02004650094f7c9ee_6da376ff3e14c480.jpg'),
(12, 3, 'Важная тема для программиста!', '2022-04-21', 'Каменюкин Сергей', 'uploads/users/test.jpg');

-- --------------------------------------------------------

--
-- Структура таблицы `posts`
--

CREATE TABLE `posts` (
  `id` int NOT NULL,
  `title` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `prebody` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `body` varchar(10000) COLLATE utf8mb4_unicode_ci NOT NULL,
  `data` date NOT NULL,
  `category` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `image` varchar(500) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Дамп данных таблицы `posts`
--

INSERT INTO `posts` (`id`, `title`, `prebody`, `body`, `data`, `category`, `image`) VALUES
(2, 'Как я сходила на Worldskills 2022', 'Интересная история псевдоуспеха', 'WorldSkills International (WSI) – это международная некоммерческая ассоциация, целью которой является повышение статуса и стандартов профессиональной подготовки и квалификации по всему миру. WSI существует с 1946 года, её создатели поставили перед собой амбициозные цели: мотивировать молодых людей конкурировать, чтобы разбудить их энтузиазм по поводу профессиональной подготовки, а также для сравнения навыков и способностей людей из разных стран.\r\nЯ принимала участие в компентенции «Веб-технологии», задания более чем выполнимы, но волнение очень сильно играет свою роль и мешает. Также случилась неприятная ситуация с vue.js, так как по документам в используемом стеке данный фреймворк  допущен, но увы Вы не сможее им воспользоваться!)\r\nПочему?\r\nДа потому, что для создания проекта необходимы компоненты, которые скачиваются из - за интернета, доступ к которому на чемпионате у Вас нет, следовательно произошел небольшой слив позиций.\r\nЧто сказать в целом, неплохой опыт.\r\nМедальон за проффесионализм выбила).', '2022-04-05', 'Интересное', 'uploads/posts/16504878551650487837post-2.jpg'),
(3, 'Я больше не могу так', '5 причин эмоционального выгорания программиста и что с этим делать', 'Причины эмоционального выгорания у программиста\r\n1) Монотонная работа\r\nДля большинства кодеров характерно многочасовое выполнение одной задачи, глубокая концентрация. В своей работе программист задействует аналитическое мышление, систематизирует информацию, устанавливает причинно-следственные связи, сравнивает и так далее. Эти процессы задействую лобную долю мозга. По уровню психических процессов мышление делится на аналитическое и интуитивное.\r\n\r\nКлюч к борьбе с эмоциональным выгоранием при монотонной работе: смена видов деятельности, задействование интуитивного мышления. Даниель Канеман отмечал, что интуиция — это способность автоматической выработки решений без длительных логических рассуждений или доказательств. Существует множество упражнений для переключения с аналитического на интуитивное мышление. Одно из них: перед рабочим коллом с коллегами представьте мысленно каждого из них, поразмышляйте о том, какими качествами характера они обладают, как характер влияет на плоды их труда (например, кто-то очень быстрый, но у него в коде одни баги, а кто-то «тормоз», но пишет чистый и хорошо документированный код, и так далее…).\r\n\r\n«Сменить» картинку также можно, подключив спорт (обязательно любимый – который нравится, пробуйте разные, чтобы найти свой), или заняться просмотром фентези/фантастики, чтением увлекательных художественных книг (не профессиональной литературы – она все так же будет задействовать именно аналитическое мышление).\r\n\r\n\r\n2) Фрустрация потребностей\r\nВы чего-то хотите и запрещаете себе или по какой-то причине не можете дать себе это, желание «забито» внутри, и начинает буквально гнить внутри вас, пуская неприятный запах. Желание может быть каким угодно – от поездки на кайт-сафари («не время, сейчас закончится спринт, и тогда!»), до сексуальных экспериментов («жена не поймет, измена = чувство вины») и многое другое. Например, в компании пошли слухи о слиянии с другой фирмой, есть риск сокращений. Это порождает страх потери работы (фрустрация потребности в безопасности и стабильности). В этом случае мы имеем дело не с эмоциональным выгоранием, а с фрустрацией потребности, и решать нужно именно этот вопрос. \r\n\r\n3) Темп работы\r\nУ каждого из нас свой темп работы, а таски рассчитываются по усредненным нормам. Это приводит к тому, что кто-то скучает весь день без работы и злится, что не развивает новые навыки, а кто-то крутится как белка в колесе от дедлайна к дедлайну, под весом навешенных ожиданий, что он выдаст первоклассный продукт вовремя, и так каждый день от звонка до звонка. \r\n\r\nОчень важно знать комфортный для себя темп работы и придерживаться его, обсудив это еще на собеседовании и при необходимости, откорректировав в процессе работы с тим лидом или HR-ом. Не стоит бояться поднимать эту тему: именно этот разговор может качественно улучить ваш рабочий график, и в результате – эмоциональное состояние. \r\n\r\n4) Признание\r\nБольшинство из нас, даже не осознавая этого, хочет видеть результаты своего труда и получать за них признание («ты крутой программист! Ты так круто решил эту задачу! В результате этого…»). Если же вы пишите код, который не «мерджат», или нет релиза, или вообще решают изменить весь проект спустя год – вы чувствуете, что все это время работали зря, ваш труд не ценен, это как «выкидыш» у женщины. Никакие деньги не дадут чувства важности, если вы видите, что делаете бесполезную работу.\r\n\r\nЕсли вы пока не хотите менять проект (держат зарплата и коллектив, например), можно получить это нужное вам признание в другом месте. На шабашке, пет-проджекте, выступая на профессиональных форумах, добавляя оупен-сорс, который используют 100500 раз, и в других местах. \r\n\r\n\r\n5) Высокая зарплата\r\nДа-да, это не опечатка. Не маленькая, а именно высокая зарплата способствует выгоранию. Вы на пике, на высоких скоростях, стараетесь выжать из себя максимум, чтобы доказать (себе и работодателю, но прежде всего себе), что достойны. И делаете крутой продукт ежедневно. А еще иногда овертаймите в ущерб сна, или выходных с друзьями. Тогда как кодер с низкой ЗП позволяет себе поиграть в игру днем («за такую ЗП я манал»…).\r\n\r\nНе будьте слишком строги к себе и боритесь с перфекционизмом. Верните страсть к работе, займитесь тем, что увлекает вас. Может быть это новая технология или интересный опыт коллег? Разрешите себе бездельничество. Иногда 2 суток, проведенных без строчки кода, рождают в мозге решение сложной задачи, которую вы выполните за 20 минут.\r\n\r\nОбщие «лекарства»\r\nКаким бы ни была причина выгорания и апатии, есть общие рекомендации, которые помогут вам справиться. Я давала эти рекомендации своим клиентам и наблюдала впечатляющие результаты уже на первой неделе терапии. Предлагаю и вам попробовать это:\r\n\r\n«Легкий человек»\r\nВсе зависит от психотипа (добро пожаловать в типологию личности), но как правило, программист – это усидчивый, скурпулезный, внимательный к деталям, с аналитическим складом ума человек, следующий стандартам и правилам, с критическим мышлением. Этому типу личности важно иметь рядом полную противоположность – веселого и беззаботного человека, который будет расслаблять вас и превращать жизнь в праздник. Это может быть девушка, друг, родственник или коллега – не важно. Проводите время с вашей противоположностью, и вы заметите, что ваше состояние изменится. В вашей паре вы – основа, база, берег, а партнер – воздушный шарик, путешествие, удовольствие и новизна. Коллега, который метко шутит и делает мемасы с вашими фото, или девушка, которая скажет «не парься, это такая ерунда! Поехали лучше в кино!» подходят на эту роль.\r\n\r\n\r\n«Гормоны счастья»\r\nСеротонин, Эндорфины, Дофамин, Окситоцин. Выработка этих гормонов повышает настроение, мы чувствуем радость. Существует множество способов усилить выработку этих гормонов, и вот некоторые из них:\r\n\r\nЗаймитесь спортом  - бег, велосипед, плавание, танцы – не важно. В конце тренировки вы почувствуете себя круто, и за этим ощущением будете возвращаться опять и опять. Первые разы занимайтесь «через не хочу».\r\n\r\nОкружите себя уютом: теплые носки, плед, горячий кофе, кот (если есть), объятия, свечи или прикроватный свет (все вместе единовременно). Закройте глаза и послушайте легкую музыку. Ничего не делайте, никуда не спешите.\r\n\r\nДобавьте в рацион питания лосось, яйца, шпинат, орехи. Уберите чипсы и газировку (на время!).\r\n\r\nЗапланируйте «час удовольствия» на каждый день. Планируйте, чем побалуете себя сегодня? Новые наушники? Заказ любимой еды? Прогулка в парке? Игра по сети с другом? Ежедневно радуйте себя.\r\n\r\n\r\nСуществует еще масса способов справиться с выгоранием, как и более 5 причин его возникновения. Возможно, вам поможет мысль, что вы не одиноки – по данным американской исследовательской компании Gallup, 23% работающих американцев часто или постоянно находятся в состоянии эмоционального выгорания.\r\n\r\nЕсли самостоятельно справиться не получается, обращайтесь к психологу. На консультации специалист поможет увидеть истинную причину вашего состояния и проработать ее. Современная психология эффективно справляется с состоянием эмоционального выгорания, апатии и депрессии. Сегодня квалифицированные психологи на сеансах «не просто слушают», но действительно помогают, применяя эффективные техники с первой же встречи.', '2022-04-05', 'Интересное', 'uploads/posts/post-1.jpg'),
(4, 'Секрет быстрого программирования!', ' Задумайтесь: когда вы сидите перед вашим редактором, но работа идет небыстро, потому ли это, что у вас низкая скорость набора?', 'Самая распространенная причина непродуктивных размышлений разработчика — неполное понимание какого-то слова или символа.\r\n<br>\r\nЭто произошло со мной буквально на днях. У меня ушли часы на написание того, что должно было стать действительно простым сервисом. Я очень старалась прекратить думать об этом, пытаясь разобраться, как все должно работать. В итоге я осознал, что не понимал одну из входных переменных в основной функции. Я знал название ее типа, но так никогда и не поинтересовался его определением — то есть на самом деле не понимал, что эта переменная (слово или символ) означала. Как только просмотрел код и документацию по этому типу — пришло понимание, и я написал этот сервис как демон (каламбур отчасти неслучаен).\r\n<br>\r\nТаких вариантов — бесчисленное множество. Многие пользуются языком программирования, не разбираясь, что (, ), [, ], {, }, +, * и % означают в этом языке. Некоторые разработчики не понимают, как на самом деле работает компьютер. Помните мой «Единственный секрет программиста-рок-звезды»? Вот где суть! Ведь если ты по-настоящему понимаешь, тебе не надо прекращать ненужные размышления. Это также побудило меня написать книгу: понимание того, что есть незыблемые законы создания программного обеспечения, может избавить от многих эпизодов «борьбы с размышлениями».\r\n<br>\r\nТак что, если вы оказались в мыслительном тупике, не пытайтесь решить проблему в своей голове — ищите то, чего не понимаете, вне себя. После чего возьмите и посмотрите на что-то, что поможет вашему пониманию. Это применимо даже к вопросам вроде «Прочтет ли когда-нибудь пользователь этот текст?» У вас может не быть Департамента исследований пользовательского опыта для настоящего ответа на этот вопрос, но вы можете хотя бы нарисовать что-нибудь, показать другим, выслушать их мнение. Не пытайтесь просто сидеть и думать — сделайте что-то. Только действие ведет к пониманию.\r\n<br>\r\nРисование\r\n<br>\r\nБывает, мысль разработчика останавливается потому, что ему не удается одновременно удерживать в голове все находящиеся в работе идеи — множество связанных между собой сложным образом вещей, нуждающихся в осмыслении. В этом случае почти всегда эффективнее записать или зарисовать что-либо, чем думать об этом. Вам нужно каким угодно образом посмотреть на это со стороны, воспринять вне своей головы. Это один из вариантов понимания, но достаточно важный, чтобы вынести его отдельным пунктом.\r\n<br>\r\nНачинание\r\n<br>\r\nИногда проблема в том, что «нет представления, какой код нужно начинать писать». Простейшее решение — начать писать любой известный вам код, который вы можете писать прямо сейчас. Выберите часть проблемы, которую вы полностью понимаете, и пишите для нее решение, даже если это всего одна функция или не самый важный класс.\r\n<br>\r\nЧасто фрагмент кода, с которого проще всего начать, — это «ядро» приложения. Например, если бы я взялся писать приложение YouTube, я бы начал с видеоплеера. Воспринимайте это как упражнение по непрерывной поставке: пишите код, который действительно сначала создает продукт — неважно, каким дурацким или незначительным он может получаться. Видеоплеер без пользовательского интерфейса — уже продукт, выполняющий полезную задачу (воспроизведение видео), даже если еще не полноценен.\r\n<br>\r\nЕсли вы не уверены в том, как писать даже такой базовый код, просто начните с кода, в котором вы уверены. Обычно, как только решается часть проблемы, становится значительно легче решать проблему целиком. Иногда проблема раскрывается поэтапно: вы решаете одну часть, которая делает очевидным решение следующей части, и так далее. Начните с любой части, создание которой не требует длительного обдумывания, и просто напишите ее.\r\n<br>\r\nПропуск шагов\r\n<br>\r\nЕще одна специфическая проблема понимания — пропуск какого-то шага в правильной последовательности разработки. Например, наш объект Велосипед зависит от объектов Колеса, Педали и Рама. Если вы попытаетесь написать весь объект Велосипед без написания объектов Колеса, Педали и Рама, вам придется много обдумывать эти несуществующие классы. С другой стороны, если вы напишете класс Колеса, пока вообще не существует класс Велосипед, вам предстоит много размышлений о том, как класс Колеса будет использоваться классом Велосипед.\r\n<br>\r\nПравильное решение тут — реализовать достаточную часть класса Велосипед, чтобы дойти до шага, где вам понадобятся Колеса. Потом написать достаточную часть класса Колеса, чтобы удовлетворить актуальную потребность в классе Велосипед. После чего вернуться к классу Велосипед и работать над ним до следующей нужды в каком-то из основных элементов. Так же, как и в пункте «Начинание»: найдите часть проблемы, которую можете решить без размышлений, и решите ее сразу.\r\n<br>\r\nНе перепрыгивайте шаги при разработке своей системы — и это позволит вам быть продуктивным.\r\n<br>\r\nФизические проблемы\r\n<br>\r\nЕсли я недостаточно ем, я начинаю отвлекаться и задумываться, потому что я голоден. Вовсе необязательно это будут мысли о моем желудке, но они бы вообще не возникли, если бы я был сыт, — я был бы сосредоточен. То же справедливо для сна, болезней и любых других телесных проблем. Они не настолько распространены, как перечисленные выше, так что первым делом всегда ищите, что вы недостаточно хорошо поняли. Но если вы уверены, что понимаете все, причиной остановки мысли могут быть проблемы на физическом уровне.\r\n<br>\r\n\r\n\r\nОтвлекающие факторы\r\n<br>\r\nКогда разработчик отвлекается на что-то внешнее, например, шум, ему может понадобиться некоторое время подумать, чтобы вспомнить, над чем он работал в своем решении. Ответ тут относительно прост: перед тем, как садитесь за разработку, убедитесь в том, что ваше окружение не побеспокоит вас или отвлекающие факторы не будут вас прерывать. Одним нужно закрыть дверь в свой офис, другим — надеть наушники, кому-то — поставить статус «Не беспокоить»: сделайте так, как вам нужно. Возможно, вам понадобится помощь вашего менеджера или сотрудников, чтобы создать действительно благоприятную для разработки среду.\r\n<br>\r\nНеуверенность в себе\r\n<br>\r\nИногда разработчик сидит и размышляет потому, что ощущает неуверенность в себе и своих решениях. Выход тут аналогичен описанному в пункте «Понимание»: если вы не уверены в чем-то, узнавайте об этом больше до тех пор, пока не появится уверенность, достаточная, чтобы писать код. Если вы не уверены в себе как в программисте вообще, возможно, вам нужно изучить еще многое — вроде основ, изложенных в «Почему программисты отстой». Разбирайтесь с каждым вопросом, пока не добьетесь настоящего понимания, после чего переходите к следующему, и так далее. Программирование всегда подразумевает обучение в процессе, но по мере увеличения багажа знаний вы будете становиться все быстрее и быстрее, а задумываться придется все меньше и меньше.\r\n<br>\r\nЛожные представления\r\n<br>\r\nМногим говорили, что думать — удел умных людей, и они не задумываются, чтобы принимать разумные решения. Но это неправда. Если бы размышления сами по себе могли сделать вас гением, вокруг были бы одни Эйнштейны. По-настоящему умные люди учатся, наблюдают, принимают решения и действуют. Они приобретают знания и потом используют их для решения возникающих проблем. Если хотите быть действительно умным, используйте свой интеллект для деятельности в физическом мире — не замыкайтесь с ним для великих дум в своей голове.\r\n<br>\r\nБездействие\r\n<br>\r\nВсе перечисленное выше — ключ к тому, как быть быстрым программистом, когда вы сидите и пишете код. Если же вы весь день читаете почту и ходите по встречам, а программировать вам некогда — это другая проблема. Некоторые ее аспекты схожи (это как если бы организации пришлось «не задумываться»), но это не то же самое.\r\n<br>\r\nВпрочем, можно попробовать и несколько подходов по аналогии. Есть вероятность, что организация не вполне понимает вас или вашу роль и потому шлет вам столько писем и зовет на столько встреч. Возможно, вы чего-то не понимаете об организации, например, как посещать меньше собраний и получать меньше почты :) Может быть, вам удастся разрешить некоторые организационные сложности, адаптируя решения из этого поста к коллективам вместо отдельных людей.\r\n<br>\r\n<h4>Как вам такой подход?</h4>', '2022-04-07', 'Интересное', 'uploads/posts/1650489728Keyboard_Hands_475732_3840x2400.jpg');

-- --------------------------------------------------------

--
-- Структура таблицы `users`
--

CREATE TABLE `users` (
  `id` int NOT NULL,
  `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `email` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `password` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `avatar` varchar(500) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `role` int NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Дамп данных таблицы `users`
--

INSERT INTO `users` (`id`, `name`, `email`, `password`, `avatar`, `role`) VALUES
(9, 'Ева Герц', 'evagerc@mail.ru', 'e6169fb8f47ef655f96fae966c63ae58', 'uploads/users/1649065257xMoSND43lLM.jpg', 0),
(11, 'Админ', 'killjoy.2015@mail.ru', '21232f297a57a5a743894a0e4a801fc3', 'uploads/users/164996764516479684650-02-05-14acf90ce40c166b956b4ca0e942be17759b6eb5ed64b0a02004650094f7c9ee_6da376ff3e14c480.jpg', 1),
(12, 'Каменюкин Сергей', 'phantom.lanser.2000@mail.ru', '202cb962ac59075b964b07152d234b70', 'uploads/users/test.jpg', 0);

--
-- Индексы сохранённых таблиц
--

--
-- Индексы таблицы `comments`
--
ALTER TABLE `comments`
  ADD PRIMARY KEY (`id`),
  ADD KEY `comment_id` (`comment_id`);

--
-- Индексы таблицы `posts`
--
ALTER TABLE `posts`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `users`
--
ALTER TABLE `users`
  ADD PRIMARY KEY (`id`);

--
-- AUTO_INCREMENT для сохранённых таблиц
--

--
-- AUTO_INCREMENT для таблицы `comments`
--
ALTER TABLE `comments`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=13;

--
-- AUTO_INCREMENT для таблицы `posts`
--
ALTER TABLE `posts`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=22;

--
-- AUTO_INCREMENT для таблицы `users`
--
ALTER TABLE `users`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=14;

--
-- Ограничения внешнего ключа сохраненных таблиц
--

--
-- Ограничения внешнего ключа таблицы `comments`
--
ALTER TABLE `comments`
  ADD CONSTRAINT `comments_ibfk_1` FOREIGN KEY (`comment_id`) REFERENCES `posts` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
